<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Single Long</title>
    <link>https://slkyrim.github.io/</link>
    <description>Recent content on Single Long</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 30 Jul 2020 16:56:43 +0800</lastBuildDate>
    
        <atom:link href="https://slkyrim.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://slkyrim.github.io/about/</link>
      <pubDate>Thu, 30 Jul 2020 17:38:52 +0800</pubDate>
      
      <guid>https://slkyrim.github.io/about/</guid>
      
        <description>&lt;p&gt;破站新成，先做个简单自我介绍&lt;/p&gt;
&lt;p&gt;USTCer + UCASer + Leetcode500题的编程新人&lt;/p&gt;
&lt;p&gt;技术栈：Python, Java, C#, C++, Matlab, LaTeX&lt;/p&gt;
&lt;p&gt;工具技术栈：Git&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Motto&lt;/strong&gt;: Single Long needs to be Double Long&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo搭建博客</title>
      <link>https://slkyrim.github.io/post/hugo-blog/</link>
      <pubDate>Thu, 30 Jul 2020 16:56:43 +0800</pubDate>
      
      <guid>https://slkyrim.github.io/post/hugo-blog/</guid>
      
        <description>&lt;p&gt;自己的个人博客部署好了。具备写博文，归档，读者评论等主要功能。第一篇博文记录自己搭建博客的过程以备忘。&lt;/p&gt;
&lt;p&gt;截至本文写成日期，本博客主要基于&lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane&#34;&gt;hugo-theme-jane&lt;/a&gt;搭建，感谢作者&lt;a href=&#34;https://github.com/xianmin&#34;&gt;xianmin&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1安装环境&#34;&gt;1、安装环境&lt;/h2&gt;
&lt;p&gt;macOS Catalina 10.15.4&lt;/p&gt;
&lt;p&gt;确保本地已安装Git和Homebrew。&lt;/p&gt;
&lt;h2 id=&#34;2安装hugo&#34;&gt;2、安装Hugo&lt;/h2&gt;
&lt;p&gt;视频参考：&lt;a href=&#34;https://www.bilibili.com/video/BV1q4411i7gL&#34;&gt;点击这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其它操作系统可以到Hugo官网下载对应的&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;安装包&lt;/a&gt;进行手动安装。&lt;/p&gt;
&lt;p&gt;在终端输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;每次用brew安装都会卡在更新上，有两种解决方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、开另一个终端重新输入以上命令。如果第一个终端更新完成，则会下载更新版本的软件，那么之后再更新软件&lt;/li&gt;
&lt;li&gt;2、按Control+C停止更新，直接开始下载软件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在终端输入以下命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果出现如下安装的hugo版本号则说明hugo已安装成功&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;Hugo Static Site Generator v0.74.3/extended darwin/amd64 BuildDate: unknown
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;3本地部署博客&#34;&gt;3、本地部署博客&lt;/h2&gt;
&lt;h3 id=&#34;31生成博客&#34;&gt;3.1、生成博客&lt;/h3&gt;
&lt;p&gt;输入以下命令生成博客：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;hugo new site myBlog
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这样便会生成一个名字为myBlog（根据个人需要自行命名）的文件夹，里面是博客的框架。&lt;/p&gt;
&lt;h3 id=&#34;32配置主题&#34;&gt;3.2、配置主题&lt;/h3&gt;
&lt;p&gt;Hugo有很多主题可以直接拿来用，这里采用的是&lt;a href=&#34;https://github.com/xianmin&#34;&gt;xianmin&lt;/a&gt;的&lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane&#34;&gt;jane&lt;/a&gt;主题，可以去他的Github库里看具体配置流程。&lt;/p&gt;
&lt;p&gt;这里简述一下流程，先cd到博客文件夹路径下，我这里是myBlog，进入后输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;git clone https://github.com/xianmin/hugo-theme-jane.git --depth&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; themes/jane
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下载好主题后要在myBlog路径下对&lt;strong&gt;config.toml&lt;/strong&gt;配置文件进行配置，这里推荐直接拷贝&lt;a href=&#34;https://github.com/xianmin&#34;&gt;xianmin&lt;/a&gt;的&lt;a href=&#34;https://github.com/xianmin/xianmin.org/blob/master/config.toml&#34;&gt;配置文件&lt;/a&gt;。因为现在还没有建立远端git仓库，所以里面的&lt;strong&gt;enableGitInfo&lt;/strong&gt;要先设置为false，不然之后会报错。&lt;/p&gt;
&lt;h3 id=&#34;33本地部署&#34;&gt;3.3、本地部署&lt;/h3&gt;
&lt;p&gt;输入以下命令开始部署博客：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这时在浏览器中输入&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;就可以看到博客部署到本地上了。&lt;/p&gt;
&lt;h2 id=&#34;4远端部署博客&#34;&gt;4、远端部署博客&lt;/h2&gt;
&lt;h3 id=&#34;41在github上建立博客远端仓库&#34;&gt;4.1、在github上建立博客远端仓库&lt;/h3&gt;
&lt;p&gt;比如我的Github用户名为SLKyrim，那么需要建立一个名为 slkyrim.github.io 的仓库（大小写不区分）作为博客的远端仓库。&lt;/p&gt;
&lt;p&gt;然后需要更改config.toml中的&lt;strong&gt;baseURL&lt;/strong&gt;设置为建立的这个仓库的域名，这里是&amp;quot;https://slkyrim.github.io/&amp;quot;。&lt;/p&gt;
&lt;p&gt;输入以下命令生成博客在前端的文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;hugo --buildDrafts
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这时应该会在myBlog路径下生成一个public文件夹，这里面存放博客的前端文件。&lt;/p&gt;
&lt;p&gt;然后cd进public文件夹，依次输入以下命令将这些前端文件推到Github的远端仓库中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;git init
git add .
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;First Commit&amp;#34;&lt;/span&gt;
git remote add origin https://github.com/SLKyrim/slkyrim.github.io.git 【注意这里要换成你的远程仓库的地址】
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这时在浏览其中输入你远端博客的域名即可访问你的博客，这里是我的博客的域名&lt;a href=&#34;https://slkyrim.github.io/&#34;&gt;https://slkyrim.github.io/&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;42写博文&#34;&gt;4.2、写博文&lt;/h3&gt;
&lt;p&gt;这时博客空空如也，自然要写些博文。&lt;/p&gt;
&lt;p&gt;下图是我所理解的基于Hugo的博客文件结构&lt;/p&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://slkyrim.github.io/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure  itemprop=&#34;associatedMedia&#34;
  itemscope itemtype=&#34;http://schema.org/ImageObject&#34; &gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://slkyrim.github.io/blog_file_struct.png&#34; /&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://slkyrim.github.io/blog_file_struct.png&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
      &lt;figcaption&gt;&lt;h4&gt;Hugo博客文件结构&lt;/h4&gt;
      &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;所以我们应该在content文件夹下的post文件夹里放置我们的Markdown博文文件。&lt;/p&gt;
&lt;h3 id=&#34;43建立博客主体的git仓库&#34;&gt;4.3、建立博客主体的git仓库&lt;/h3&gt;
&lt;p&gt;之前我们把配置文件config.toml中的enableGitInfo设为false，是因为我们还没给博客主体建立git仓库，于是我们cd回博客的主路径myBlog，然后输入命令建立博客主体的git仓库。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建&lt;strong&gt;主体仓库&lt;/strong&gt;好后，我直接用&lt;a href=&#34;https://desktop.github.com/&#34;&gt;Github Desktop&lt;/a&gt;将博客主体推到我的Github上，并把主题theme/jane和前端文件public都设置进gitignore。这样我们就能把config.toml中的enableGitInfo设为true，并将[params.gitInfo]中gitRepo设为&lt;strong&gt;主体仓库&lt;/strong&gt;的路径，这样我们每次修改博文的时候同步到&lt;strong&gt;主体仓库&lt;/strong&gt;后都会自动更新修改时间。&lt;/p&gt;
&lt;h3 id=&#34;44将修改后的博客同步到远端&#34;&gt;4.4、将修改后的博客同步到远端&lt;/h3&gt;
&lt;p&gt;写好博文后，输入以下命令重新生成新的public文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Shell&#34; data-lang=&#34;Shell&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;把新生成的public推送到远端仓库即可将修改同步到远端博客。&lt;/p&gt;
&lt;h2 id=&#34;5额外功能评论功能&#34;&gt;5、额外功能：评论功能&lt;/h2&gt;
&lt;p&gt;博客有评论功能会觉得和读者有互动（真希望会有呢），可以一起交流进步。&lt;/p&gt;
&lt;p&gt;这里选用&lt;a href=&#34;https://utteranc.es/&#34;&gt;utterances&lt;/a&gt;通过Github issue来支持静态博客评论功能。轻量且安全。&lt;/p&gt;
&lt;p&gt;又要在Github上创建一个仓库专门用来存放评论的issue。创建好&lt;strong&gt;评论仓库&lt;/strong&gt;后，安装&lt;a href=&#34;https://github.com/apps/utterances&#34;&gt;utterances APP&lt;/a&gt;，并选择安装在&lt;strong&gt;评论仓库&lt;/strong&gt;上。并在配置文件config.toml里[params.utteranc]中的repo路径设置为&lt;strong&gt;评论仓库&lt;/strong&gt;。这样我们的博客便拥有评论功能了。&lt;/p&gt;
&lt;h2 id=&#34;6结语&#34;&gt;6、结语&lt;/h2&gt;
&lt;p&gt;建立个人博客，一共在Github上创建了三个仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;远端仓库：存放博客public前端文件的，只有把更新的配置同步到这个仓库，远端博客才会更新&lt;/li&gt;
&lt;li&gt;主体仓库：存放博客主体文件的，包括博文，图片等。&lt;/li&gt;
&lt;li&gt;评论仓库：存放基于Github issue的评论的仓库，轻量且安全。&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
